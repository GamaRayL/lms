version: '3'

services:
  app:
    build: .
    tty: true
    command: bash -c 'python3 manage.py migrate && python3 manage.py createuser && python3 manage.py runserver 0.0.0.0:8000'
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    networks:
      - mynetwork
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres
    ports:
      - '5433:5432'
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgres/data/pg_data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork
  redis:
    image: redis
    ports:
      - '6379:6379'

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app

networks:
  mynetwork:
    driver: bridge

volumes:
  pg_data: